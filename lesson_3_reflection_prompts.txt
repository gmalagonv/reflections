**When would you want to use a remote repository rather than keeping all your work local?
When there are several contributors to the same project.

**Why might you want to always pull changes manually rather than having Git
  automatically stay up-to-date with your remote repository?
Given that the repositories in the remote are mainly for sharing and
collaborating, it may happen that what you commit because it is a logical change
for you, it is not a logical change in the spirit of the whole project that you
are working in.

 **Describe the differences between forks, clones, and branches.
   When would you use one instead of another?
fork: used when you want to copy a repositry from a GitHub account to another
GitHub account.
clone: when you copy a repository from GitHub to a local machine.
branch: it is a bifurcation crated in a repository in a local machine.

**What is the benefit of having a copy of the last known state of the remote
  stored locally?
  By this you can easily compare it with the last commit. That is particularly
  important if you are off-line, by this you can know in what state is the shared
  version.

**How would you collaborate without using Git or GitHub? What would be easier,
  and what would be harder?
We could use dropbox or sharing by email with the collaborators the changes in
the code. Easier: we would be dealing with a single file and a single version of
it. Harder: track who and why a given collaborator made a change in the file.

**When would you want to make changes in a separate branch rather than directly
  in master? What benefits does each approach have?
when changes are experimental or when you are collaborating with somebody else
and it's safer to make a new branch than later can be checked by the others who
are collaborating. Changes in a new branch have the advantage that the master
will remain the same. 
